{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/bipin/projects/web/nextjs/learn/auth2/pages/home.js\";\nimport { session, signIn, signOut, useSession } from \"next-auth/client\";\nimport { useEffect, useState } from \"react\";\nimport useSWR, { mutate } from \"swr\";\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nexport default function Home({\n  apidata\n}) {\n  const [session, loading] = useSession();\n  const {\n    0: userInput,\n    1: setUserInput\n  } = useState(\"\");\n  const {\n    data,\n    error\n  } = useSWR(\"http://localhost:4000/posts\", fetcher, {});\n  const {\n    0: pdata,\n    1: setData\n  } = useState(apidata);\n\n  const handlesubmit = event => {\n    event.preventDefault();\n    const dataT = {\n      name: \"\",\n      body: \"\"\n    };\n    dataT.name = session.user.name;\n    dataT.body = userInput;\n    setData([...pdata, dataT]);\n    console.log(dataT);\n    fetch(\"http://localhost:4000/addpost\", {\n      method: \"POST\",\n      // or 'PUT',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(dataT)\n    }).then(response => response.json()).then(dataT => {\n      console.log(\"Success:\", dataT);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n\n  const handleChange = e => {\n    setUserInput(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!session && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You are not signed in to see this home page\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => signIn(),\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), session && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"this is the secret , the protected route :)\", /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handlesubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: userInput,\n            type: \"text\",\n            onChange: handleChange,\n            placeholder: \"Whats on your mind\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => signOut(),\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), data //   .slice(0)\n        //   .reverse()\n        .map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: item.body,\n          children: [item.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", item.body, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\nexport async function getServerSideProps(context) {\n  const res = await fetch(`http://localhost:4000/posts`);\n  const apidata = await res.json();\n  console.log(apidata);\n\n  if (!apidata) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      apidata\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["/home/bipin/projects/web/nextjs/learn/auth2/pages/home.js"],"names":["session","signIn","signOut","useSession","useEffect","useState","useSWR","mutate","fetcher","args","fetch","then","res","json","Home","apidata","loading","userInput","setUserInput","data","error","pdata","setData","handlesubmit","event","preventDefault","dataT","name","body","user","console","log","method","headers","JSON","stringify","response","catch","handleChange","e","currentTarget","value","map","item","getServerSideProps","context","notFound","props"],"mappings":"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","sourcesContent":["import { session, signIn, signOut, useSession } from \"next-auth/client\";\nimport { useEffect, useState } from \"react\";\nimport useSWR, { mutate } from \"swr\";\n\nconst fetcher = (...args) => fetch(...args).then((res) => res.json());\n\nexport default function Home({ apidata }) {\n  const [session, loading] = useSession();\n  const [userInput, setUserInput] = useState(\"\");\n  const { data, error } = useSWR(\"http://localhost:4000/posts\", fetcher, {});\n\n  const [pdata, setData] = useState(apidata);\n\n  const handlesubmit = (event) => {\n    event.preventDefault();\n\n    const dataT = { name: \"\", body: \"\" };\n    dataT.name = session.user.name;\n    dataT.body = userInput;\n    setData([...pdata, dataT]);\n    console.log(dataT);\n    fetch(\"http://localhost:4000/addpost\", {\n      method: \"POST\", // or 'PUT',\n\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(dataT),\n    })\n      .then((response) => response.json())\n      .then((dataT) => {\n        console.log(\"Success:\", dataT);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const handleChange = (e) => {\n    setUserInput(e.currentTarget.value);\n  };\n\n  return (\n    <>\n      {!session && (\n        <>\n          <div>\n            You are not signed in to see this home page\n            <button onClick={() => signIn()}>Sign in</button>\n          </div>\n        </>\n      )}\n\n      {session && (\n        <>\n          <div>\n            this is the secret , the protected route :)\n            <form onSubmit={handlesubmit}>\n              <input\n                value={userInput}\n                type=\"text\"\n                onChange={handleChange}\n                placeholder=\"Whats on your mind\"\n              />\n            </form>\n            <button onClick={() => signOut()}>Sign Out</button>\n            {data\n              //   .slice(0)\n              //   .reverse()\n              .map((item) => (\n                <div id={item.body}>\n                  {item.name}\n                  <br></br>\n                  <div> {item.body} </div>\n                </div>\n              ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport async function getServerSideProps(context) {\n  const res = await fetch(`http://localhost:4000/posts`);\n  const apidata = await res.json();\n  console.log(apidata);\n\n  if (!apidata) {\n    return {\n      notFound: true,\n    };\n  }\n\n  return {\n    props: { apidata }, // will be passed to the page component as props\n  };\n}\n"]},"metadata":{},"sourceType":"module"}